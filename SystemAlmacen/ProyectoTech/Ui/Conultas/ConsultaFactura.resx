<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="errorProvider.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAvYZ9AMWJfQA2XIwAO2CPAD1gjgA3apwAOWqbADZvogA4cqUANXesADl+tABOapUAV3GZAGZ+
        ogA+hboAXYWrAEKAsQBaibIAWo+6AGGCpwB4mrsAKozJADKHwgA+jMMANpTPADmX0gA1mNYAN6DfAEKT
        ygBPl8gAWpPAAEqf1ABKotkAVqDSAFyk1QB5qs4AYavbAEux6wBas+cAXbfrAHy75QB8w+8Ai4eaAKKI
        hwCpj44Av4mAAKqSkACokZcAsJmYALiengCPlqsApZypAKSerAC4oqIAvaKiAMGKgQDCjIEAwo6FAMOP
        iADEj4gAw5CIAMSQiQDImI0AyJiSAMmblADLnZYAzZ+UAM+ilADOopkAzaKdANKjkgDVppMA0KKVANCm
        nADXqZ8A262YANWykwDVtZgA3bKbANqwnQDcuZwA776UAOG3nwDBqakAxKqqANGooQDUq6EA1q6iANWs
        pADUr6kAw7CtAMywrwDYsaIA07unANazrwDdu64AyrCwAMi0sADJuLUAzru3AMS2uQDMuLkAy7y7AM29
        uQDIu7wAzL69ANi2sQDau7YA0by5ANy+ugDiuaEA5b+pAOC/sgD2wY8AzcC/ANzDtADSwbgA3sK7AOrO
        owDrxKgA7smqAPTLowD5zqQA/NasAOPEtQDryrAA6s68AO7UuwDx07YA+duyAPnesQD72bUA8tS6APbY
        uwD73LsA/d+8AP/juAD46r0Alc7yAJzU9QDNwsUA0cTEANfIwgDczsIA38/GANHHyADUyMkA1cvOANfM
        zQDbyMoA3M3NAN/TyADa0M8A3c/QAN3U1ADgxsIA5sTEAOnNwADkyssA5MzJAOLUxQDu1cIA79vDAOHR
        yQDm08gA4tXMAO7WzgDu2s4A7tzPAPDXxgDx2MEA89rEAPTaxQD838AA9N7LAOTV0QDo0tMA6NTQAOrd
        0QDq2NQA49vYAOvb2wDq3dsA797fAPPf0QD14cEA++LCAP3jwgD/680A9fDLAO3h0gDv5dMA7+PUAO/q
        1gDv4t4A7OXcAPXi0gD36NcA/e/RAP/v1gDw4dwA8OzdAPjs2gD67twA/fHUAP/21AD+8dkA//XbAP7y
        3gD+9t0A/vjeAOrl5QD26eEA8+3nAPXu5QD46uAA+u7kAP3v5wDz6+sA9ezqAPjv6AD98eAA/vbhAPvz
        5AD98+UA/vbkAP/54gD+/OMA/vjkAP//5QD39egA+vHpAP326QD48e0A+vbvAP327gD++OoA//3qAPv7
        7wD++e4A/v3uAPTy8gD58/EA+fXyAP338wD89/QA/fnyAP7+8QD7+PYA//71APz5+AD+/vkA/v7+ANrR
        /wD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0OAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAFAwMMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYLCwgMAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAFA8iHQoEAAAAAAAAAAE6QAAAAAAAAAAAAAAAAAAAAAAAEB4pIRcH
        AAAAAGs7svZsAQAAAAAAAAAAAAAAAAAAAAAAEiOLJxkJAABWQNz/+v+0O1YAAAAAAAAAAAAAAAAAAAAA
        EyWMKBsRMEv0/Ovr8P/qVj0AAAAAAAAAAAAAAAAAAAAAHyAqJhYzsHM2LzFbj9f8nAFaAAAAAAAAAAAA
        AAAAAAAAJBocGDRcYTIsLTdVVJj6w0Y8AAAAAAAAAAAAAAAAAAAAKxU1nbazwMLKxLexVZDx95wBAAAA
        AAAAAAAAAAAAWQKnbZ/Vus3x/Pz47/S4VMHj8clAQgAAAAAAAAAAAEpF3NRm2oLP+v///////P+WdeLR
        5ehfOAAAAAAAAABJV/n/lZqIu+nw+vz8/P///Nti3tHP0PCgAQAAAAAAXVjz//+TsHzh7e34+vr////4
        62PM0c/IyPF2QQAAAFBx+////5KlhOzt3+3x+Pr///HnasvRz8/QrD9uAABPnv3/////kqR73uni3+Xu
        8fH65Mpny9HP06I5bAAAb6j///////+bk3qH4ent4tPj5Oa+tWjR0d9/AQAAAH6q//////////JlqHKu
        3unpx83OiqGOoeXifQEAAAAAAHjF/f///////5tpp1J6vL2Jg3d0lGTi4mAuAAAAAAAAAHmA9f//////
        /5lll3RRTU5ejo5o4MxYPgAAAAAAAAAAAKt52P///////9RzaY2NjXNqkeXGREMAAAAAAAAAAAAAAAB5
        r/z///////3WpKamv8zjr0dxAAAAAAAAAAAAAAAAAACBgdn/////993VuczSz6NIAAAAAAAAAAAAAAAA
        AAAAAADFea/8/+vd+//qqaOATAAAAAAAAAAAAAAAAAAAAAAAAAAAhYWtrK+sgYF/cFMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAIaGhausAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP////////////////P////h////4P///+B/H//wPA//+BgD//wAAf/+AAB//wAAP/+A
        AB/+AAAH/AAAA/gAAAHwAAAA4AAAAMAAAAGAAAAHAAAAD4AAAB/AAAA/4AAAf/gAAP/8AAP//gAH//+A
        D///4P//////////////////
</value>
  </data>
</root>