<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="timer1Hora.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>132, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA12QVANpjGQDXaRoA2WoYANFsJgDVbyoA1nApANVyLQDYcSgA23gvANdlPADVczAA1XY2ANl4
        NgDUdz0A1nk6ANZ7PgDXfD8A2Xk6ANh6PQDYfT4A2G5GAM1/TwDUe0AA135CANR9RADafkEA2n9EAMh/
        UADYgEcA3YBEANmCSQDfhUsA2oVMAN6JTwDOh1wA24pSAN6KUQDcjFMA341XANSJWwDdjVgA3Y1cAN6Q
        WwDdkF4A4oNFAOWJTgDpiUoA6YlMAOuMTgDtjE0A5oxRAO6OUQDhj1oA5Y9ZAOKQWgDlkFoA5ZVeAOyT
        WgDwkVMA8ZJVAPOWWQD0l1wA85hdAPSYXgDakGIA3pNhAN6VYQDflGUA0pNrANSTagDQl3cA45NhAOeW
        YwDlmGEA4JhmAOWYZgDqmGEA4JdoAOSYaQDqn2sA9pphAPacYwDznWcA955lAPieZgD4n2gA4ptwAOGf
        cQDfoHoA+KBnAPihagD4omwA+qRvAOWgcADjoXcA5KF1AOqicADppHUA7Kd1AOupdwDioXgA5aJ4AOOm
        fADkpX0A5ah/AOupeADtq3oA9aRwAPqlcAD8pnIA+6l1AP2pdQDwrn0A/qt4AP6seQD/r3wA/7F/AMib
        ggDXqo8AzquWAN6wlADhpoEA5aeBAOaogQDiqIQA5aqFAOathwDlq4gA5a2KAOStjADorowA57CNAOix
        jgD/soAA/7WFAPO4igD2u48A/7mKAP+7jAD/vI4A5bGQAOqzkQDotpMA6beUAOq4mgDpu54A9r6RAPi/
        kgD/vpAA1rWiAMO3sgDpvKIA/8GTAPjAlAD/wpUA+MOYAPjEmAD/xZkA/sieANHDuwDqwKUA6sGpAOrD
        rADqxK0A7cWtAP7KoAD9zKIA/s6lAP7RqQD/1KwA5cu2AOvIswDsyLIA68m1AO3MuQDvzrwAz83OANvM
        wwDI0NQA1NHRANbV1ADsz8AA7tfKAO/YygDy1MIA9NTAAPPaygDw284A8N3RAPDi2QD25doA8uXdAPjo
        3wDe4+YA1+bvANfp8QDl6u8A9enhAPXq5AD37ecA8+7qAPXu6gDz8e8A9vHuAPnz7gDm7vQA7fDzAO7z
        9gDl9fgA8vLyAPTz8wD39fMA9fX1APjz8AD59vIA/PbxAPf49wD4+PYA/Pj2APP2+AD29/gA+Pf4APb4
        +QDw+f4A9vr8APL8/QD3/P8A+Pj4APv9+QD4+vwA+f3+APz+/gC0Uf8AwnH/AM+R/wDcsf8A69H/AP//
        /wAAAAAACAAvAA4AUAAVAHAAGwCQACEAsAAmAM8ALADwAD4R/wBYMf8AcVH/AIxx/wCmkf8Av7H/ANrR
        /wD///8AAAAAAAAAAAAAAAAAAEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgQhEAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAJX/TlxgsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFlF2OLRs0cS
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAACRIsfi1NbdxngHagAAAAAAAAAAAAAAAAAAAAAAAAAAAA285NTU
        1ODUjnoaJwAAAAAAAAAAAAAAAAAAAAAAAAAMpujU1NTezH674aEpDgAAAAAAAAAAAAAAAAAAAAAACIHp
        1tTU1uKDku/W0LVGCXwAAAAAAAAAAAAAAAAAACxg3ODW1tbkt4bv2tTa0LZIBygAAAAAAAAAAAAAAABp
        K87n1tbW4r982efU1tTa3cN5DwkAAAAAAAAAAAAAABzA6NbW1uDMf8Lo1tbW1tba5c+yJAJhAAAAAAAA
        AAANuujW2tbe53tm797W1tbW1tbW5eLEdwEKAAAAAAAAFaLp2tra2uSlBiGk4OTa2tra2tra5enSmAUE
        AAAAACV/7+Xa5eXnyx4uVTJqv+Tl2tra2tre5enjtB0DAABgCIHb5OXl5eS+H3BxXT00ouXn5eXl5eXl
        5enoxRcLAA0fNVjK6OXl5LhRnHZxXlMwadXo5eXl5eXl3+bvrBZPE1ReNVC+6OfowWOqlodxXlszYcHp
        5+Xl5eXl6dgqABBOiHFuQDSj1ejlf4mrn4h0b109N7Do6OXn5encLQAAImKgiHNvVjJQvenNgmyqp42H
        cV5BMYXN7+fo6VoAAAAAJqiojHVvXT80mejprV+dq5yIc25XM02x6e+OAAAAAAAtI5SplodxblYzZ8fv
        wWllqKeLdW9dPjCPk2gAAAAAAACAEGupn4h0b109ObDp569flKmWdnFdVzFEAAAAAAAAAAAAIDaep42H
        cV5SMYTX78h/bKmfiHRuNgAAAAAAAAAAAAAAQxuJqpyHc25XNUm57+mZS6inizQAAAAAAAAAAAAAAAAA
        aBRioJ+Ic25cPC+k6e+tY4k4AAAAAAAAAAAAAAAAAAAAACIjiqeMdW9dUjB9ye+uDAAAAAAAAAAAAAAA
        AAAAAAAAAIAQZKeadnFeVzVKpiuGAAAAAAAAAAAAAAAAAAAAAAAAAAAgOJufiHRvXUAOWQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABZG3KglnZzOxkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEkuVn20TAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAQxs6FJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0AAAAA
        AAAAAAAAAAAAAP/7////8f///+B////AP///gA///4AH//8AA//+AAD//AAAf/gAAD/4AAAP8AAAB+AA
        AAPAAAABgAAAAIAAAAAAAAABAAAAAwAAAAeAAAAPgAAAD8AAAB/wAAA/+AAAf/wAAP//AAH//4AB///g
        A///8Af///wP///+D////7//
</value>
  </data>
</root>